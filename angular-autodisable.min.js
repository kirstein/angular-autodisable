/* 
 * angular-autodisable 0.2.0
 * http://github.com/kirstein/angular-autodisable
 * 
 * Licensed under the MIT license
 */
!function(a){"use strict";return a.module("ngAutodisable",[]).directive("ngAutodisable",["$parse","$compile",function(b,c){function d(b){return b&&a.isFunction(b.then)&&a.isFunction(b["finally"])}function e(a,b,c){var e=c(b,{$event:a.eventName});d(e)&&a.handlePromise(e)}function f(a,b,d,f){d.unbind(a.eventName).bind(a.eventName,function(){b.$apply(function(){c(d)(b),a.callbacks.forEach(e.bind(null,a,b))})})}function g(a){return a.split(";").map(function(a){return b(a,null,!0)})}function h(a){return a.hasOwnProperty(o)?a[o]:!1}function i(a,b,c,d){function e(){i--,0===i&&g()}function f(){a.attr(j,!0),c&&a.addClass(c)}function g(){a.attr(j,!1),c&&a.removeClass(c)}var h={},i=0;return h.eventName=b,h.callbacks=d,h.handlePromise=function(a){0===i&&f(),i++,a["finally"](function(){e()})},h}var j="disabled",k="click",l="ngClick",m="submit",n="ngSubmit",o="ngAutodisableClass";return{restrict:"A",compile:function(a,b){var c;if(b.hasOwnProperty(l))c=i(a,k,h(b),g(b[l]));else{if(!b.hasOwnProperty(n))throw new Error("ngAutodisable requires ngClick or ngSubmit attribute in order to work");c=i(a.find("button[type=submit]"),m,h(b),g(b[n]))}return f.bind(null,c)}}}])}(angular);